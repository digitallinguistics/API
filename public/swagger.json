{
  "swagger": "2.0",
  "info": {
    "title": "DLx API",
    "description": "An API for accessing the DLx linguistic database.",
    "version": "0.1.0",
    "contact": {
      "name": "Daniel W. Hieber",
      "url": "http://danielhieber.com",
      "email": "dhieber@umail.ucsb.edu"
    },
    "license": {
      "name": "MIT"
    }
  },
  "host": "api.digitallinguistics.org",
  "basePath": "/v1",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "client_jwt": []
    }
  ],
  "securityDefinitions": {
    "admin_jwt": {
      "type": "apiKey",
      "description": "A JSON Web Token, issued by `login.digitallinguistics.org`, which includes `db` scope. Should be included in the Authorization header.",
      "name": "Authorization",
      "in": "header"
    },
    "client_jwt": {
      "type": "apiKey",
      "description": "A JSON Web Token, issued by `login.digitallinguistics.org`, which includes a valid client ID. User scope not needed.",
      "name": "Authorization",
      "in": "header"
    },
    "user_jwt": {
      "type": "apiKey",
      "description": "A JSON Web Token, issued by `login.digitallinguistics.org`, which includes the `user` scope.",
      "name": "Authorization",
      "in": "header"
    }
  },
  "tags": [
    {
      "name": "app",
      "description": "Operations on apps."
    }
  ],
  "definitions": {
    "error": {
      "title": "Error",
      "description": "An error object.",
      "type": "object",
      "required": [
        "status",
        "error"
      ],
      "properties": {
        "status": {
          "type": "integer"
        },
        "error": {
          "type": "string"
        },
        "error_description": {
          "type": "string"
        }
      },
      "default": {
        "status": 500,
        "error": "Server error.",
        "error_description": "An unknown server error occurred."
      }
    }
  },
  "responses": {
    "error": {
      "description": "An error response.",
      "schema": {
        "$ref": "#/definitions/error"
      }
    }
  },
  "parameters": {
    "app": {
      "name": "app",
      "in": "path",
      "description": "The ID of the app to perform the operation on (a UUID).",
      "required": true,
      "type": "string",
      "pattern": "[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}"
    },
    "ids": {
      "name": "ids",
      "in": "query",
      "description": "A comma-separated list of resource IDs. If the IDs are all numeric, they may be represented as numeric rather than strings.",
      "type": "array",
      "required": true,
      "collectionFormat": "csv",
      "items": {
        "type": "string"
      }
    },
    "permission": {
      "name": "permission",
      "in": "body",
      "description": "An object describing a permission on a resource.",
      "required": true,
      "schema": {
        "title": "Permission Object",
        "type": "object",
        "description": "An object describing a permission on a resource. Permissions objects either grant/remove a permission for a specific user, or set the `public` permission to true/false. If setting a user permission, include the `role`, `resource`, and `user` fields. If setting the `public` attribute, include the `resource` and `public` fields.",
        "required": [
          "resource"
        ],
        "additionalProperties": false,
        "properties": {
          "role": {
            "title": "User Role",
            "description": "The specific role that's being added or deleted. Must be one of `owner`, `contributor`, or `viewer`.",
            "type": "string",
            "enum": [
              "owner",
              "contributor",
              "viewer"
            ]
          },
          "resource": {
            "title": "Resource ID",
            "description": "The ID of the resource to add or remove the permission for. May be numeric if the ID is a number.",
            "type": "string"
          },
          "user": {
            "title": "User ID (Email)",
            "description": "The ID (email) of the user to change permissions for.",
            "type": "string",
            "format": "uri"
          },
          "public": {
            "title": "Publicly Accessible",
            "description": "Whether the resource should be publicly accessible. If true, all users will be able to view (but not edit) the resource.",
            "type": "boolean"
          }
        }
      }
    }
  },
  "paths": {
    "/apps": {
      "get": {
        "tags": [
          "app"
        ],
        "summary": "Retrieves client apps from the collection.",
        "operationId": "getApps",
        "security": [
          {
            "admin_jwt": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ids"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of client apps."
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "put": {
        "tags": [
          "app"
        ],
        "summary": "Upserts one or more new client apps.",
        "operationId": "upsertApps",
        "security": [
          {
            "admin_jwt": []
          }
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The request body, consisting of an app object or array of app objects.",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns the newly upserted app or array of apps."
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/apps/{app}": {
      "parameters": [
        {
          "$ref": "#/parameters/app"
        }
      ],
      "delete": {
        "tags": [
          "app"
        ],
        "summary": "Delete an app.",
        "operationId": "deleteApp",
        "security": [
          {
            "admin_jwt": []
          }
        ],
        "responses": {
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "get": {
        "tags": [
          "app"
        ],
        "summary": "Retrieve an app.",
        "operationId": "getApp",
        "security": [
          {
            "admin_jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the requested app."
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "put": {
        "tags": [
          "app"
        ],
        "summary": "Update an app.",
        "operationId": "updateApp",
        "security": [
          {
            "admin_jwt": []
          }
        ],
        "responses": {
          "201": {
            "description": "If the update operation is successful, this operation returns the updated app object."
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/apps/{app}/permissions": {
      "parameters": [
        {
          "$ref": "#/parameters/app"
        }
      ],
      "delete": {
        "summary": "Delete a permission on an app.",
        "tags": [
          "app",
          "permission"
        ],
        "operationId": "deleteAppPermission",
        "security": [
          {
            "user_jwt": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/permission"
          }
        ],
        "responses": {
          "204": {
            "description": "Delete operation successful. No data is returned in the body of the response."
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "get": {
        "summary": "Get all the permissions on an app.",
        "tags": [
          "app",
          "permission"
        ],
        "operationId": "getAppPermissions",
        "security": [
          {
            "user_jwt": []
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the app's permissions object."
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "summary": "Add a permission for an app.",
        "tags": [
          "app",
          "permission"
        ],
        "operationId": "addAppPermission",
        "security": [
          {
            "user_jwt": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/permission"
          }
        ],
        "responses": {
          "201": {
            "description": "Returns the modified permissions object for the app."
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    }
  }
}
